#!/usr/bin/env node
"use strict";

var program = require("commander");
var p = require("../package.json");

var _require = require("fs");

var writeFileSync = _require.writeFileSync;
var readFileSync = _require.readFileSync;

var _require2 = require("path");

var join = _require2.join;

var projectPath = join(process.env["HOME"], ".ipfsprojetcs");

var fail = function fail() {

	program.help();
	process.exit();
};

var init = function init() {

	try {
		writeFileSync(projectPath, "[]");
		return true;
	} catch (e) {

		process.stdout.write(e.message);
		process.exit(1);
	}
};

var addProject = function addProject(projectName) {

	if (projectName) {

		var pfile = JSON.parse(readFileSync(projectPath, "utf8"));

		var exists = pfile.filter(function (p) {
			return p.name === projectName;
		});

		if (exists.length < 1) {

			pfile.push({
				name: projectName,
				versions: []
			});

			writeFileSync(projectPath, JSON.stringify(pfile), "utf8");
			console.log(projectName + " added to list of projcets");
		} else {

			console.log("project " + projectName + " already tracked");
		}
	} else {

		fail();
	}
};

var addVersion = function addVersion(projectName, pathName, version) {

	if (projectName && pathName && version) {} else {

		fail();
	}
};

program.version(p.version);

program.command("init").description("initialise your project storage").action(init);

program.command("project <projectname>").description("add a new project to track").action(addProject);

program.command("add <projectname> <pathname> <version>").description("publish a new project version to ipfs").action(addVersion);

program.command("open <projectname> [versionname]", "open the latest version of a project, or a specific" + "version, in your browser").action(function () {});

program.command("list [projectname]", "without [projectname], list your projects, with" + " [projectname], list the published versions of that" + " project").action(function () {});

program.command("publish", "generate a HTML page which lists all of your" + " stored projects and publish it under your ipns").action(function () {});

program.parse(process.argv);
